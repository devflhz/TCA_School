@page "/studentlist"

@using WebApp.Services;
@using Data.Models;

@inject StudentService StudentService
<div class="row">
    <div class="col">
        @if (students == null)
        {
            <div class="card">
                <div class="card-header">
                    Students List
                </div>
                <div class="card-body">
                    <p><em>Loading...</em></p>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-header">
                    Students List
                    <button class="btn btn-primary float-right" @onclick="@(() => Modal.Show<New>($"Create new student"))">New</button>
                </div>
                <div class="card-body">
                    <table class="table table-hover table-bordered ">
                        <thead>
                            <tr>
                                <th>First Name</th>
                                <th>Middle Name</th>
                                <th>Last Name</th>
                                <th>Gender</th>
                                <th>Phone</th>
                                <th>Address</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in students)
                            {
                                <tr>
                                    <td>@student.FirstName</td>
                                    <td>@student.MiddleName</td>
                                    <td>@student.LastName</td>
                                    <td>@student.Gender</td>
                                    <td>
                                        <button class="btn btn-secondary" @onclick="@(() => ShowPhoneList(student))">Phone list</button>
                                    </td>
                                    <td>
                                        <button class="btn btn-secondary" @onclick="@(() => ShowAddressList(student))">Address list</button>
                                    </td>
                                    <td>
                                        <button class="btn btn-secondary" @onclick="@(() => ShowDetails(student))">Details</button>
                                        <button class="btn btn-outline-primary" @onclick="@(() => ShowEdit(student))">Edit</button>
                                        <button class="btn btn-outline-danger" @onclick="@(() => Modal.Show <Delete>("Do you want to delete this student?"))">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    private List<Student> students;

    void ShowPhoneList(Student student)
    {
        var parameters = new ModalParameters();
        parameters.Add("Student", student);
        Modal.Show<Phones>("Phone list", parameters);
    }

    void ShowAddressList(Student student)
    {
        var parameters = new ModalParameters();
        parameters.Add("Student", student);
        Modal.Show<Addresses>("Address list", parameters);
    }

    void ShowDetails(Student student)
    {
        var parameters = new ModalParameters();
        parameters.Add("Student", student);
        Modal.Show<Details>("Details", parameters);
    }

    void ShowEdit(Student student)
    {
        var parameters = new ModalParameters();
        parameters.Add("Student", student);
        Modal.Show<Edit>("Edit", parameters);
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await StudentService.GetStudentsAsync();
        if (result.IsSuccess)
            students = result.Value;
    }
}
